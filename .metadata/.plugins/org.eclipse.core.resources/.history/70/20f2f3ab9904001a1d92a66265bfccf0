package coke.code.queue;

import java.util.Scanner;

public class CircleArrayQueueDemo {
	public static void main(String[] args) {
		System.out.println(-2 % 3);
		//测试一把
		System.out.println("测试数组模拟环形队列的案例");
		
		//创建一个环形队列 说明设置4，其队列数据最大是3
		CircleArray queue = new CircleArray(4);
		char key = ' ';//接收用户输入
		Scanner scanner = new Scanner(System.in);
		boolean loop = true;
		//输出一个菜单
		while(loop){
			System.out.println("s(show):显示队列");
			System.out.println("e(exit):退出程序");
			System.out.println("a(add):添加数据到队列");
			System.out.println("g(get):从队列取出数据");
			System.out.println("h(head):查看队列头的数据");
			key = scanner.next().charAt(0);
			switch (key) {
			case 's':
				queue.showQueue();
				break;
			case 'a':
				System.out.println("输出一个数字");
				int value = scanner.nextInt();
				queue.addQueue(value);
				break;
			case 'g':
				try {
					int res = queue.getQueue();
					System.out.printf("取出的数据是%d\n",res);
				} catch (Exception e) {
					System.out.println(e.getMessage());
				}
				break;
			case 'h'://查看队列头的数据
				try {
					int res = queue.headQueue();
					System.out.printf("队列头的数据是%d\n",res);
				} catch (Exception e) {
					System.out.println(e.getMessage());
				}
				break;
			case 'e'://退出
				scanner.close();
				loop = false;
				break;
			default:
				break;
			}
		}
	}
}
class CircleArray{
	private int maxSize;
	private int front;
	private int rear;
	private int[] arr;
	
	public CircleArray(int maxSize){
		this.maxSize = maxSize;
		arr = new int[maxSize];
	}
	
	//判断队列是否已满 永远留一个位置 空位
	public boolean isFull(){
		return (rear+1)%maxSize == front;
	}
	
	//判断队列是否为空
	public boolean isEmpty(){
		return rear == front;
	}
	
	//添加数据到队列
	public void addQueue(int n){
		//判断队列是否已满
		if(isFull()){
			System.out.println("队列满,不能加入数据");
			return;
		}
		//直接将数据加入
		arr[rear] = n;
		//将rear后移，这里必须考虑取模 (永远是环形递增不会超位)
		rear = (rear + 1)%maxSize;
	}
	
	//获取队列的数据
	public int getQueue(){
		//判断队列是否为空
		if(isEmpty()){
			//通过抛出异常
			throw new RuntimeException("队列为空,不能取数据");
		}
		int value = arr[front];
		front = (front+1)%maxSize;
		return value;
	}
	
	//显示队列的所有数据
	public void showQueue(){
		//遍历
		if(isEmpty()){
			System.out.println("队列为空，没有数据");
			return;
		}
		
		for(int i = front; i < front + size() ; i++){
			System.out.printf("arr[%d]=%d\n",i%maxSize,arr[i%maxSize]);
		}
		
	}
	
	//求 
	public int size(){
		//加上maxSize 防止模出负数 因为这是一个环形队列
		return (rear + maxSize - front)%maxSize;
	}
	
	//显示队列的头数据
	public int headQueue(){
		//判断
		if(isEmpty()){
			throw new RuntimeException("队列是空的，~没有数据");
		}
		return arr[front];
	}
	
	
}